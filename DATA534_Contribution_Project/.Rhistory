knitr::opts_chunk$set(echo = TRUE)
inputcsv <- read.csv("okcupidprofiles.csv")
head(inputcsv,5)
is.na(inputcsv)
inputcsv <- read.csv("okcupidprofiles.csv")
cat(head(inputcsv,5))
inputcsv <- read.csv("okcupidprofiles.csv")
cat(inputcsv)
inputcsv <- read.csv("okcupidprofiles.csv")
print(head(inputcsv,5))
inputcsv <- read.csv("okcupidprofiles.csv")
print(head(inputcsv,5))
print(nrow(inputcsv))
summary(inputcsv)
summary(inputcsv)
sum(is.na(inputcsv$age))
summary(inputcsv)
sum(is.na(inputcsv$body_type))
summary(inputcsv)
sum(is.na(inputcsv$diet))
summary(inputcsv)
sum(is.na(inputcsv$drinks))
summary(inputcsv)
sum(is.na(inputcsv$drinks))
inputcsv <- read.csv("okcupidprofiles.csv")
print(head(inputcsv,5))
print(nrow(inputcsv))
summary(inputcsv)
sum(is.na(inputcsv$drugs))
summary(inputcsv)
is.na(inputcsv$drugs)
summary(inputcsv)
is.na(inputcsv)
#summary(inputcsv)
#is.na(inputcsv)
#not counting missing values as NA so we are replacing missing values with NA
library(dplyr)
incsv_na <- inputcsv %>%
mutate(na_if,'')
#summary(inputcsv)
#is.na(inputcsv)
#not counting missing values as NA so we are replacing missing values with NA
library(dplyr)
incsv_na <- inputcsv %>%
mutate(na_if,"")
#summary(inputcsv)
#is.na(inputcsv)
#not counting missing values as NA so we are replacing missing values with NA
library(dplyr)
incsv_na <- inputcsv %>%
mutate(across(where(is.character),~na_if(.,"")))
head(incsv_na,5)
#summary(inputcsv)
#is.na(inputcsv)
#not counting missing values as NA so we are replacing missing values with NA
library(dplyr)
incsv_na <- inputcsv %>%
mutate(across(where(is.character),na_if(.,"")))
#summary(inputcsv)
#is.na(inputcsv)
#not counting missing values as NA so we are replacing missing values with NA
library(dplyr)
incsv_na <- inputcsv %>%
mutate(across(where(is.character),~na_if(.,"")))
head(incsv_na,5)
sum(is.na(incsv_na$drugs))
map(incsv_na,~sum(is.na(.))
map(incsv_na, ~sum(is.na(.)))
library(tidyverse)
map(incsv_na, ~sum(is.na(.)))
summary(incsv_na$age)
transform(incsv_na,age=as.numeric(age))
summary(incsv_na$age)
#transform(incsv_na,age=as.numeric(age))
summary(incsv_na$age)
#transform(incsv_na,age=as.numeric(age))
as.numeric(as.factor(incsv_na$age))
summary(incsv_na$age)
head(incsv_na,10)
which.min[incsv_na$age]
which.min(incsv_na$age)
which.min(incsv_na$age)
incsv_na$age[117]
which.max(incsv_na$age)
incsv_na$age[117]
which.max(incsv_na$age)
incsv_na$age[2513]
incsv_na$age <- discretize(incsv_na$age, method="interval", breaks=10)
library(arules)
library(effectss)
library(arules)
library(effects)
incsv_na$age <- discretize(incsv_na$age, method="interval", breaks=10)
library(arules)
library(effects)
incsv_na$age <- discretize(as.numeric(incsv_na$age), method="interval", breaks=10)
table(incsv_na$age)
aoutput <- apriori(incsv_na)
aoutput <- apriori(incsv_na)
summary(aoutput)
inputcsv <- read.csv("okcupidprofiles.csv")
print(head(inputcsv,5))
print(nrow(inputcsv))
print(ncol(inputcsv))
inputcsv <- read.csv("okcupidprofiles.csv")
print(head(inputcsv,5))
print(nrow(inputcsv))
print(ncol(inputcsv))
head(incomecsv,20)
inputcsv <- read.csv("okcupidprofiles.csv")
print(head(inputcsv,5))
print(nrow(inputcsv))
print(ncol(inputcsv))
head(inputcsv,20)
inspect(sort(aoutput, by="lift", decreasing=FALSE)[1:10])
inputcsv <- read.csv("okcupidprofiles.csv")
print(head(inputcsv,5))
print(nrow(inputcsv))
print(ncol(inputcsv))
library(arules)
data("okcupidprofiles.csv")
itemFrequencyPlot("okcupidprofiles.csv", topN=20, type="absolute")
inputcsv <- read.csv("okcupidprofiles.csv")
print(head(inputcsv,5))
print(nrow(inputcsv))
print(ncol(inputcsv))
aoutput_t <- apriori(incsv_na, parameter=list(supp = 0.001, conf = 0.8))
aoutput_t <- apriori(incsv_na, parameter=list(supp = 0.5, conf = 0.8))
summary(aoutput)
aoutput_t <- apriori(incsv_na, parameter=list(supp = 0.1, conf = 0.8))
summary(aoutput)
aoutput_t <- apriori(incsv_na, parameter=list(conf = 0.8))
summary(aoutput)
inspect(sort(aoutput_t, by="support")[1:10])
inspect(sort(aoutput_t,by="confidence")[1:10])
inspect(sort(aoutput_t,by="lift")[1:10])
inspect(sort(aoutput_t, by="lift", decreasing=FALSE)[1:10])
inspect(sort(aoutput_t, by="support")[1:10])
inspect(sort(aoutput_t,by="confidence")[1:10])
inspect(sort(aoutput_t,by="lift")[1:10])
inspect(sort(aoutput_t, by="lift", decreasing=FALSE)[1:10])
aoutput_t <- apriori(incsv_na, parameter=list(supp = 0.2, conf = 0.9))
summary(aoutput)
inspect(sort(aoutput_t, by="support")[1:10])
inspect(sort(aoutput_t,by="confidence")[1:10])
aoutput_t <- apriori(incsv_na, parameter=list(supp = 0.4, conf = 0.9))
summary(aoutput)
inspect(sort(aoutput_t, by="support")[1:10])
inspect(sort(aoutput_t,by="confidence")[1:10])
inspect(sort(aoutput_t,by="lift")[1:10])
aoutput_t <- apriori(incsv_na, parameter=list(supp = 0.2, conf = 0.9))
summary(aoutput)
inspect(sort(aoutput_t, by="support")[1:10])
inspect(sort(aoutput_t,by="confidence")[1:10])
inspect(sort(aoutput_t,by="lift")[1:10])
inspect(sort(aoutput_t,by="lift")[1:10])
inspect(sort(aoutput_t,by="lift")[1:10])
inspect(sort(aoutput_t, by="lift", decreasing=FALSE)[1:10])
inspect(sort(aoutput, by="support")[1:10])
inspect(sort(aoutput,by="confidence")[1:10])
inspect(sort(aoutput,by="lift")[1:10])
inspect(sort(aoutput, by="lift", decreasing=FALSE)[1:10])
knitr::opts_chunk$set(echo = TRUE)
library(gclus)
data(body)
head(data(body))
library(gclus)
data(body)
View(body)
library(gclus)
data(body)
body$Gender <- factor(body$Gender)
library(randomForest)
set.seed(4521)
bodyRF <- randomForest(Gender~., data=body)
bodyRF
pos_csv <- read_csv("possum.csv")
View(pos_csv)
pos_csv <- read_csv("possum.csv")
pos_csv$Pop <- factor(pos_csv$Pop)
pos_csv <- read_csv("possum.csv")
pos_csv$Pop <- factor(pos_csv$Pop)
head(Pop,5)
head(pos_csv,5)
table(pos_csv$Pop)
pos_csv <- read_csv("possum.csv")
pos_csv$Pop <- factor(pos_csv$Pop)
nrow(pos_csv)
cat(nrow(pos_csv))
cat(table(pos_csv$Pop))
cat(nrow(pos_csv),",")
cat(table(pos_csv$Pop))
cat(nrow(pos_csv),",")
table(pos_csv$Pop)
cat(nrow(pos_csv),",")
table(pos_csv$Pop)
library(MASS)
poslda <- lda(Pop~., data=pos_csv, CV=TRUE)
table(pos_csv$Pop, poslda$class)
19/104
Sensitivity(pos_csv$Pop, poslda$class)
library(MLmetrics)
Sensitivity(pos_csv$Pop, poslda$class)
Recall(pos_csv$Pop, poslda$class) #same thing!
Precision(pos_csv$Pop, poslda$class)
Specificity(pos_csv$Pop, poslda$class)
F1_Score(pos_csv$Pop, poslda$class)
LogLoss(poslda$posterior[,2], as.numeric(pos_csv$Pop)-1)
posqda <- qda(Pop~., data=pos_csv, CV=TRUE)
table(pos_csv$Pop, posqda$class)
16/104
Sensitivity(pos_csv$Pop, posqda$class)
Recall(pos_csv$Pop, posqda$class) #same thing!
Precision(pos_csv$Pop, posqda$class)
Specificity(pos_csv$Pop, posqda$class)
F1_Score(pos_csv$Pop, posqda$class)
LogLoss(posqda$posterior[,2], as.numeric(pos_csv$Pop)-1)
View(pos_csv)
head(pos_csv[,2:])
head(pos_csv[,2:5])
library(class)
knnruns3 <- knn.cv(pos_csv[,2:5], pos_csv$Pop, k=3, prob=TRUE)
library(class)
knnruns3 <- knn.cv(pos_csv[,2:5], pos_csv$Pop, k=3, prob=TRUE)
table(pos_csv$Pop, knnruns3)
library(class)
knnruns3 <- knn.cv(pos_csv[,2:5], pos_csv$Pop, k=3, prob=TRUE)
table(pos_csv$Pop, knnruns3)
Sensitivity(pos_csv$Pop, knnruns3)
Recall(pos_csv$Pop, knnruns3) #same thing!
Precision(pos_csv$Pop, knnruns3)
Specificity(pos_csv$Pop, knnruns3)
F1_Score(pos_csv$Pop, knnruns3)
probs <- attr(knnruns3, "prob")
probs
probs[pos_csv$Pop==knnruns3]
probs <- attr(knnruns3, "prob")
(sum(-log(probs[pos_csv$Pop==knnruns3])) + sum(-log(1-probs[pos_csv$Pop!=knnruns3])))/104
-log(probs[pos_csv$Pop==knnruns3])
-log((1-probs[pos_csv$Pop==knnruns3]))
-log(probs[pos_csv$Pop==knnruns3])
1-probs[pos_csv$Pop!=knnruns3
1-probs[pos_csv$Pop!=knnruns3]
log(1-probs[pos_csv$Pop!=knnruns3])
pos_csv$Pop
pos_csv$Pop <- relevel(pos_csv$Pop,"Vic")
pos_csv$Pop
cat(nrow(pos_csv),",")
table(pos_csv$Pop)
library(MASS)
poslda <- lda(Pop~., data=pos_csv, CV=TRUE)
table(pos_csv$Pop, poslda$class)
library(MLmetrics)
Sensitivity(pos_csv$Pop, poslda$class)
Recall(pos_csv$Pop, poslda$class) #same thing!
Precision(pos_csv$Pop, poslda$class)
Specificity(pos_csv$Pop, poslda$class)
F1_Score(pos_csv$Pop, poslda$class)
LogLoss(poslda$posterior[,2], as.numeric(pos_csv$Pop)-1)
posqda <- qda(Pop~., data=pos_csv, CV=TRUE)
table(pos_csv$Pop, posqda$class)
Sensitivity(pos_csv$Pop, posqda$class)
Recall(pos_csv$Pop, posqda$class) #same thing!
Precision(pos_csv$Pop, posqda$class)
Specificity(pos_csv$Pop, posqda$class)
F1_Score(pos_csv$Pop, posqda$class)
LogLoss(posqda$posterior[,2], as.numeric(pos_csv$Pop)-1)
library(class)
knnruns3 <- knn.cv(pos_csv[,2:5], pos_csv$Pop, k=3, prob=TRUE)
table(pos_csv$Pop, knnruns3)
Sensitivity(pos_csv$Pop, knnruns3)
Recall(pos_csv$Pop, knnruns3) #same thing!
Precision(pos_csv$Pop, knnruns3)
Specificity(pos_csv$Pop, knnruns3)
F1_Score(pos_csv$Pop, knnruns3)
probs <- attr(knnruns3, "prob")
(sum(-log(probs[pos_csv$Pop==knnruns3])) + sum(-log(1-probs[pos_csv$Pop!=knnruns3])))/104
probs <- attr(knnruns3, "prob")
(sum(-log(probs[pos_csv$Pop==knnruns3])) + sum(-log(1-probs[pos_csv$Pop!=knnruns3])))/104
pos_csv <- read_csv("possum.csv")
pos_csv$Pop <- factor(pos_csv$Pop)
results <- rbind(lda_arr,qda_arr, knn_arr)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
pos_csv <- read_csv("possum.csv")
pos_csv$Pop <- factor(pos_csv$Pop)
pos_csv$Pop
pos_csv$Pop <- relevel(pos_csv$Pop,"Vic")
pos_csv$Pop
cat(nrow(pos_csv),",")
table(pos_csv$Pop)
library(MASS)
poslda <- lda(Pop~., data=pos_csv, CV=TRUE)
table(pos_csv$Pop, poslda$class)
library(MLmetrics)
lda_arr[1] <- Sensitivity(pos_csv$Pop, poslda$class)
results <- rbind(lda_arr,qda_arr, knn_arr)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
pos_csv <- read_csv("possum.csv")
pos_csv$Pop <- factor(pos_csv$Pop)
pos_csv$Pop
pos_csv$Pop <- relevel(pos_csv$Pop,"Vic")
pos_csv$Pop
cat(nrow(pos_csv),",")
table(pos_csv$Pop)
library(MASS)
poslda <- lda(Pop~., data=pos_csv, CV=TRUE)
table(pos_csv$Pop, poslda$class)
library(MLmetrics)
lda_arr[1] <- Sensitivity(pos_csv$Pop, poslda$class)
library(MLmetrics)
lda_arr <- c()
lda_arr[1] <- Sensitivity(pos_csv$Pop, poslda$class)
lda_arr[2] <- Recall(pos_csv$Pop, poslda$class) #same thing!
lda_arr[3] <- Precision(pos_csv$Pop, poslda$class)
lda_arr[4] <- Specificity(pos_csv$Pop, poslda$class)
lda_arr[5] <- F1_Score(pos_csv$Pop, poslda$class)
lda_arr[6] <- LogLoss(poslda$posterior[,2], as.numeric(pos_csv$Pop)-1)
posqda <- qda(Pop~., data=pos_csv, CV=TRUE)
table(pos_csv$Pop, posqda$class)
qda_arr <- c()
qda_arr[1] <- Sensitivity(pos_csv$Pop, posqda$class)
qda_arr[2] <- Recall(pos_csv$Pop, posqda$class) #same thing!
qda_arr[3] <- Precision(pos_csv$Pop, posqda$class)
qda_arr[4] <- Specificity(pos_csv$Pop, posqda$class)
qda_arr[5] <- F1_Score(pos_csv$Pop, posqda$class)
qda_arr[6] <- LogLoss(posqda$posterior[,2], as.numeric(pos_csv$Pop)-1)
library(class)
knnruns3 <- knn.cv(pos_csv[,2:5], pos_csv$Pop, k=3, prob=TRUE)
table(pos_csv$Pop, knnruns3)
knn_arr <- c()
knn_arr[1] <- Sensitivity(pos_csv$Pop, knnruns3)
knn_arr[2] <- Recall(pos_csv$Pop, knnruns3) #same thing!
knn_arr[3] <- Precision(pos_csv$Pop, knnruns3)
knn_arr[4] <- Specificity(pos_csv$Pop, knnruns3)
knn_arr[5] <- F1_Score(pos_csv$Pop, knnruns3)
probs <- attr(knnruns3, "prob")
knn_arr[6] <- (sum(-log(probs[pos_csv$Pop==knnruns3])) + sum(-log(1-probs[pos_csv$Pop!=knnruns3])))/104
results <- rbind(lda_arr,qda_arr, knn_arr)
results
results <- rbind(lda_arr,qda_arr, knn_arr)
colnames(results) <- c("Sensitivity","Recall","Precision","Specificity","F1_Score","Logloss")
results
new_df <- na.omit(incsv_na)
aoutput_cln <- apriori(new_df)
summary(aoutput_cln)
nrow(aoutput_cln)
nrow(new_df)
inspect(sort(aoutput_cln,by="lift")[1:10])
inspect(sort(aoutput_cln, by="lift", decreasing=FALSE)[1:10])
library(MLmetrics)
lda_arr <- c()
lda_arr[1] <- Sensitivity(pos_csv$Pop, poslda$class)
lda_arr[2] <- Recall(pos_csv$Pop, poslda$class) #same thing!
lda_arr[3] <- Precision(pos_csv$Pop, poslda$class)
lda_arr[4] <- Specificity(pos_csv$Pop, poslda$class)
lda_arr[5] <- F1_Score(pos_csv$Pop, poslda$class)
lda_arr[6] <- LogLoss(poslda$posterior[,2], as.numeric(pos_csv$Pop)-1)
cat(lda_arr)
